#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh

usage()
{
    echo "Usage: $0 [add|remove] VERSION IMAGE"
    echo -e "\ncalls install scripts to add(remove) kernel image IMAGE with VERSION to(from) /boot directory"
}

dropindirs_sort()
{
    local suffix=$1; shift
    local -a files
    local f d i

    readarray -t files < <(
        for d in "$@"; do
            for i in "$d/"*"$suffix"; do
                if [[ -e "$i" ]]; then
                    echo "${i##*/}"
                fi
            done
        done | sort -Vu
    )

    for f in "${files[@]}"; do
        for d in "$@"; do
            if [[ -e "$d/$f" ]]; then
                echo "$d/$f"
                continue 2
            fi
        done
    done
}

export LC_COLLATE=C

for i in "$@"; do
    if [ "$i" == "--help" -o "$i" == "-h" ]; then
        usage
        exit 0
    fi
done

if [[ "${0##*/}" == 'installkernel' ]]; then
    cmd='add'
else
    cmd="$1"
    shift
fi

ver="$1"
img="$2"

if [[ ! $cmd ]] || [[ ! $ver ]]; then
    echo "Not enough arguments" >&2
    exit 1
fi

ret=0

readarray -t PLUGINS < <(
    dropindirs_sort ".install" \
        "/etc/kernel/install.d" \
        "/usr/lib/kernel/install.d"
)

case $cmd in
    add)
        if [[ ! "$img" ]]; then
            echo "command 'add' requires an argument" >&2
            exit 1
        fi

        for f in "${PLUGINS[@]}"; do
            if [[ -x $f ]]; then
                "$f" add "$ver" "$img"
                ((ret+=$?))
            fi
        done
        ;;

    remove)
        for f in "${PLUGINS[@]}"; do
            if [[ -x $f ]]; then
                "$f" remove "$ver"
                ((ret+=$?))
            fi
        done
        ;;

    *)
        echo "unknown command '$cmd'" >&2
        exit 1
        ;;
esac

exit $ret
